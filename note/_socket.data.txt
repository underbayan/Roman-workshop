IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3891,
        _externalStream: {},
        fd: 19,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: g] listener: [Function: onend] },
           [Function: socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: socketOnDrain] ],
        timeout: [Function],
        error: [Function: socketOnError],
        close: 
         [ [Function: serverSocketCloseListener],
           [Function: onServerResponseClose] ],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         CorkedRequest {
           next: CorkedRequest { next: null, entry: null, finish: [Function] },
           entry: null,
           finish: [Function] } },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 1363,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { connection: [Function: connectionListener],
           close: [Function: bound ],
           listening: [Function: bound ],
           upgrade: [Function],
           request: [Function] },
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: {},
           fd: 13,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _server: 
      Server {
        domain: null,
        _events: 
         { connection: [Function: connectionListener],
           close: [Function: bound ],
           listening: [Function: bound ],
           upgrade: [Function],
           request: [Function] },
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: {},
           fd: 13,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           bytesRead: 3383,
           _externalStream: {},
           fd: 14,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [Function: socketOnError],
           close: [ [Function: serverSocketCloseListener] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1139,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { connection: [Function: connectionListener],
              close: [Function: bound ],
              listening: [Function: bound ],
              upgrade: [Function],
              request: [Function] },
           _eventsCount: 5,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: {},
              fd: 13,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::1337' },
        _server: 
         Server {
           domain: null,
           _events: 
            { connection: [Function: connectionListener],
              close: [Function: bound ],
              listening: [Function: bound ],
              upgrade: [Function],
              request: [Function] },
           _eventsCount: 5,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: {},
              fd: 13,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::1337' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              bytesRead: 5508,
              _externalStream: {},
              fd: 15,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: 
               [ [Function: serverSocketCloseListener],
                 [Function: onServerResponseClose] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           _bytesDispatched: 1950,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _idleTimeout: 120000,
           _idleNext: 
            TimersList {
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
              _unrefed: true,
              msecs: 120000 },
           _idlePrev: [Circular],
           _idleStart: 7459,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: null,
                    ended: true,
                    endEmitted: false,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: true,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: true,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: {},
                 _eventsCount: 0,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { host: 'localhost:1337',
                    connection: 'keep-alive',
                    pragma: 'no-cache',
                    'cache-control': 'no-cache',
                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
                    dnt: '1',
                    referer: 'http://localhost:1337/11111111111111111111111',
                    'accept-encoding': 'gzip, deflate, br',
                    'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                 rawHeaders: 
                  [ 'Host',
                    'localhost:1337',
                    'Connection',
                    'keep-alive',
                    'Pragma',
                    'no-cache',
                    'Cache-Control',
                    'no-cache',
                    'User-Agent',
                    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    'Accept',
                    'image/webp,image/apng,image/*,*/*;q=0.8',
                    'DNT',
                    '1',
                    'Referer',
                    'http://localhost:1337/11111111111111111111111',
                    'Accept-Encoding',
                    'gzip, deflate, br',
                    'Accept-Language',
                    'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    'Cookie',
                    'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/favicon.ico',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: false,
                 _dumped: false },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: 
            ServerResponse {
              domain: null,
              _events: { finish: [Function: resOnFinish] },
              _eventsCount: 1,
              _maxListeners: undefined,
              output: [],
              outputEncodings: [],
              outputCallbacks: [],
              outputSize: 0,
              writable: true,
              _last: false,
              upgrading: false,
              chunkedEncoding: true,
              shouldKeepAlive: true,
              useChunkedEncodingByDefault: true,
              sendDate: true,
              _removedHeader: {},
              _contentLength: null,
              _hasBody: true,
              _trailer: '',
              finished: false,
              _headerSent: false,
              socket: [Circular],
              connection: [Circular],
              _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
              _headers: null,
              _headerNames: {},
              _onPendingData: [Function: updateOutgoingData],
              statusMessage: 'OK',
              statusCode: 200 },
           _peername: { address: '::1', family: 'IPv6', port: 56886 } },
        _idlePrev: [Circular],
        _idleStart: 7460,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: 
            IncomingMessage {
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: false,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: 
                  StringDecoder {
                    encoding: 'utf8',
                    fillLast: [Function: utf8FillLast],
                    lastNeed: 0,
                    lastTotal: 0,
                    lastChar: <Buffer 02 00 00 00> },
                 encoding: 'utf8' },
              readable: false,
              domain: null,
              _events: {},
              _eventsCount: 0,
              _maxListeners: undefined,
              socket: [Circular],
              connection: [Circular],
              httpVersionMajor: 1,
              httpVersionMinor: 1,
              httpVersion: '1.1',
              complete: true,
              headers: 
               { host: 'localhost:1337',
                 connection: 'keep-alive',
                 'content-length': '37',
                 pragma: 'no-cache',
                 'cache-control': 'no-cache',
                 accept: '*/*',
                 origin: 'http://localhost:1337',
                 'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                 'content-type': 'text/plain;charset=UTF-8',
                 dnt: '1',
                 referer: 'http://localhost:1337/11111111111111111111111',
                 'accept-encoding': 'gzip, deflate, br',
                 'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                 cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
              rawHeaders: 
               [ 'Host',
                 'localhost:1337',
                 'Connection',
                 'keep-alive',
                 'Content-Length',
                 '37',
                 'Pragma',
                 'no-cache',
                 'Cache-Control',
                 'no-cache',
                 'Accept',
                 '*/*',
                 'Origin',
                 'http://localhost:1337',
                 'User-Agent',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                 'Content-type',
                 'text/plain;charset=UTF-8',
                 'DNT',
                 '1',
                 'Referer',
                 'http://localhost:1337/11111111111111111111111',
                 'Accept-Encoding',
                 'gzip, deflate, br',
                 'Accept-Language',
                 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                 'Cookie',
                 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
              trailers: {},
              rawTrailers: [],
              upgrade: false,
              url: '/socket.io/?EIO=3&transport=polling&t=M560_kK&sid=AzhFMsgreZEbsPO3AAAC',
              method: 'POST',
              statusCode: null,
              statusMessage: null,
              client: [Circular],
              _consuming: true,
              _dumped: false,
              _query: 
               { EIO: '3',
                 transport: 'polling',
                 t: 'M560_kK',
                 sid: 'AzhFMsgreZEbsPO3AAAC' },
              res: 
               ServerResponse {
                 domain: null,
                 _events: { finish: [Function: resOnFinish] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 output: [],
                 outputEncodings: [],
                 outputCallbacks: [],
                 outputSize: 0,
                 writable: true,
                 _last: false,
                 upgrading: false,
                 chunkedEncoding: false,
                 shouldKeepAlive: true,
                 useChunkedEncodingByDefault: true,
                 sendDate: true,
                 _removedHeader: {},
                 _contentLength: null,
                 _hasBody: true,
                 _trailer: '',
                 finished: true,
                 _headerSent: true,
                 socket: null,
                 connection: null,
                 _header: 'HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nContent-Length: 2\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: http://localhost:1337\r\nSet-Cookie: io=AzhFMsgreZEbsPO3AAAC; Path=/; HttpOnly\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\n\r\n',
                 _headers: null,
                 _headerNames: {},
                 _onPendingData: [Function: updateOutgoingData],
                 statusMessage: 'OK',
                 statusCode: 200 },
              read: [Function] },
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: { address: '::1', family: 'IPv6', port: 56884 } },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: 
         Socket {
           connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              bytesRead: 5508,
              _externalStream: {},
              fd: 15,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: 
               [ [Function: serverSocketCloseListener],
                 [Function: onServerResponseClose] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           _bytesDispatched: 1950,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _idleTimeout: 120000,
           _idleNext: [Circular],
           _idlePrev: 
            Socket {
              connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 bytesRead: 3383,
                 _externalStream: {},
                 fd: 14,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              _bytesDispatched: 1139,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { connection: [Function: connectionListener],
                    close: [Function: bound ],
                    listening: [Function: bound ],
                    upgrade: [Function],
                    request: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    bytesRead: 0,
                    _externalStream: {},
                    fd: 13,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::1337' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { connection: [Function: connectionListener],
                    close: [Function: bound ],
                    listening: [Function: bound ],
                    upgrade: [Function],
                    request: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    bytesRead: 0,
                    _externalStream: {},
                    fd: 13,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::1337' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _idleStart: 7460,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: BufferList { head: null, tail: null, length: 0 },
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: false,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: 
                        StringDecoder {
                          encoding: 'utf8',
                          fillLast: [Function: utf8FillLast],
                          lastNeed: 0,
                          lastTotal: 0,
                          lastChar: <Buffer 02 00 00 00> },
                       encoding: 'utf8' },
                    readable: false,
                    domain: null,
                    _events: {},
                    _eventsCount: 0,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { host: 'localhost:1337',
                       connection: 'keep-alive',
                       'content-length': '37',
                       pragma: 'no-cache',
                       'cache-control': 'no-cache',
                       accept: '*/*',
                       origin: 'http://localhost:1337',
                       'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                       'content-type': 'text/plain;charset=UTF-8',
                       dnt: '1',
                       referer: 'http://localhost:1337/11111111111111111111111',
                       'accept-encoding': 'gzip, deflate, br',
                       'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                       cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                    rawHeaders: 
                     [ 'Host',
                       'localhost:1337',
                       'Connection',
                       'keep-alive',
                       'Content-Length',
                       '37',
                       'Pragma',
                       'no-cache',
                       'Cache-Control',
                       'no-cache',
                       'Accept',
                       '*/*',
                       'Origin',
                       'http://localhost:1337',
                       'User-Agent',
                       'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                       'Content-type',
                       'text/plain;charset=UTF-8',
                       'DNT',
                       '1',
                       'Referer',
                       'http://localhost:1337/11111111111111111111111',
                       'Accept-Encoding',
                       'gzip, deflate, br',
                       'Accept-Language',
                       'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                       'Cookie',
                       'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/socket.io/?EIO=3&transport=polling&t=M560_kK&sid=AzhFMsgreZEbsPO3AAAC',
                    method: 'POST',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: false,
                    _query: 
                     { EIO: '3',
                       transport: 'polling',
                       t: 'M560_kK',
                       sid: 'AzhFMsgreZEbsPO3AAAC' },
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       upgrading: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: null,
                       _hasBody: true,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nContent-Length: 2\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: http://localhost:1337\r\nSet-Cookie: io=AzhFMsgreZEbsPO3AAAC; Path=/; HttpOnly\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: null,
                       _headerNames: {},
                       _onPendingData: [Function: updateOutgoingData],
                       statusMessage: 'OK',
                       statusCode: 200 },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 56884 } },
           _idleStart: 7459,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: null,
                    ended: true,
                    endEmitted: false,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: true,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: true,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: {},
                 _eventsCount: 0,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { host: 'localhost:1337',
                    connection: 'keep-alive',
                    pragma: 'no-cache',
                    'cache-control': 'no-cache',
                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
                    dnt: '1',
                    referer: 'http://localhost:1337/11111111111111111111111',
                    'accept-encoding': 'gzip, deflate, br',
                    'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                 rawHeaders: 
                  [ 'Host',
                    'localhost:1337',
                    'Connection',
                    'keep-alive',
                    'Pragma',
                    'no-cache',
                    'Cache-Control',
                    'no-cache',
                    'User-Agent',
                    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    'Accept',
                    'image/webp,image/apng,image/*,*/*;q=0.8',
                    'DNT',
                    '1',
                    'Referer',
                    'http://localhost:1337/11111111111111111111111',
                    'Accept-Encoding',
                    'gzip, deflate, br',
                    'Accept-Language',
                    'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    'Cookie',
                    'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/favicon.ico',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: false,
                 _dumped: false },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: 
            ServerResponse {
              domain: null,
              _events: { finish: [Function: resOnFinish] },
              _eventsCount: 1,
              _maxListeners: undefined,
              output: [],
              outputEncodings: [],
              outputCallbacks: [],
              outputSize: 0,
              writable: true,
              _last: false,
              upgrading: false,
              chunkedEncoding: true,
              shouldKeepAlive: true,
              useChunkedEncodingByDefault: true,
              sendDate: true,
              _removedHeader: {},
              _contentLength: null,
              _hasBody: true,
              _trailer: '',
              finished: false,
              _headerSent: false,
              socket: [Circular],
              connection: [Circular],
              _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
              _headers: null,
              _headerNames: {},
              _onPendingData: [Function: updateOutgoingData],
              statusMessage: 'OK',
              statusCode: 200 },
           _peername: { address: '::1', family: 'IPv6', port: 56886 } },
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 15603,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: true,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:09 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
        _headers: null,
        _headerNames: {},
        _onPendingData: [Function: updateOutgoingData],
        statusMessage: 'OK',
        statusCode: 200 },
     _peername: { address: '::1', family: 'IPv6', port: 56917 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3891,
        _externalStream: {},
        fd: 19,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: g] listener: [Function: onend] },
           [Function: socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: socketOnDrain] ],
        timeout: [Function],
        error: [Function: socketOnError],
        close: 
         [ [Function: serverSocketCloseListener],
           [Function: onServerResponseClose] ],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         CorkedRequest {
           next: CorkedRequest { next: null, entry: null, finish: [Function] },
           entry: null,
           finish: [Function] } },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 1363,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { connection: [Function: connectionListener],
           close: [Function: bound ],
           listening: [Function: bound ],
           upgrade: [Function],
           request: [Function] },
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: {},
           fd: 13,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _server: 
      Server {
        domain: null,
        _events: 
         { connection: [Function: connectionListener],
           close: [Function: bound ],
           listening: [Function: bound ],
           upgrade: [Function],
           request: [Function] },
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: {},
           fd: 13,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           bytesRead: 3383,
           _externalStream: {},
           fd: 14,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [Function: socketOnError],
           close: [ [Function: serverSocketCloseListener] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1139,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { connection: [Function: connectionListener],
              close: [Function: bound ],
              listening: [Function: bound ],
              upgrade: [Function],
              request: [Function] },
           _eventsCount: 5,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: {},
              fd: 13,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::1337' },
        _server: 
         Server {
           domain: null,
           _events: 
            { connection: [Function: connectionListener],
              close: [Function: bound ],
              listening: [Function: bound ],
              upgrade: [Function],
              request: [Function] },
           _eventsCount: 5,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: {},
              fd: 13,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::1337' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              bytesRead: 5508,
              _externalStream: {},
              fd: 15,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: 
               [ [Function: serverSocketCloseListener],
                 [Function: onServerResponseClose] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           _bytesDispatched: 1950,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _idleTimeout: 120000,
           _idleNext: 
            TimersList {
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
              _unrefed: true,
              msecs: 120000 },
           _idlePrev: [Circular],
           _idleStart: 7459,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: null,
                    ended: true,
                    endEmitted: false,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: true,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: true,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: {},
                 _eventsCount: 0,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { host: 'localhost:1337',
                    connection: 'keep-alive',
                    pragma: 'no-cache',
                    'cache-control': 'no-cache',
                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
                    dnt: '1',
                    referer: 'http://localhost:1337/11111111111111111111111',
                    'accept-encoding': 'gzip, deflate, br',
                    'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                 rawHeaders: 
                  [ 'Host',
                    'localhost:1337',
                    'Connection',
                    'keep-alive',
                    'Pragma',
                    'no-cache',
                    'Cache-Control',
                    'no-cache',
                    'User-Agent',
                    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    'Accept',
                    'image/webp,image/apng,image/*,*/*;q=0.8',
                    'DNT',
                    '1',
                    'Referer',
                    'http://localhost:1337/11111111111111111111111',
                    'Accept-Encoding',
                    'gzip, deflate, br',
                    'Accept-Language',
                    'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    'Cookie',
                    'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/favicon.ico',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: false,
                 _dumped: false },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: 
            ServerResponse {
              domain: null,
              _events: { finish: [Function: resOnFinish] },
              _eventsCount: 1,
              _maxListeners: undefined,
              output: [],
              outputEncodings: [],
              outputCallbacks: [],
              outputSize: 0,
              writable: true,
              _last: false,
              upgrading: false,
              chunkedEncoding: true,
              shouldKeepAlive: true,
              useChunkedEncodingByDefault: true,
              sendDate: true,
              _removedHeader: {},
              _contentLength: null,
              _hasBody: true,
              _trailer: '',
              finished: false,
              _headerSent: false,
              socket: [Circular],
              connection: [Circular],
              _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
              _headers: null,
              _headerNames: {},
              _onPendingData: [Function: updateOutgoingData],
              statusMessage: 'OK',
              statusCode: 200 },
           _peername: { address: '::1', family: 'IPv6', port: 56886 } },
        _idlePrev: [Circular],
        _idleStart: 7460,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: 
            IncomingMessage {
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: false,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: 
                  StringDecoder {
                    encoding: 'utf8',
                    fillLast: [Function: utf8FillLast],
                    lastNeed: 0,
                    lastTotal: 0,
                    lastChar: <Buffer 02 00 00 00> },
                 encoding: 'utf8' },
              readable: false,
              domain: null,
              _events: {},
              _eventsCount: 0,
              _maxListeners: undefined,
              socket: [Circular],
              connection: [Circular],
              httpVersionMajor: 1,
              httpVersionMinor: 1,
              httpVersion: '1.1',
              complete: true,
              headers: 
               { host: 'localhost:1337',
                 connection: 'keep-alive',
                 'content-length': '37',
                 pragma: 'no-cache',
                 'cache-control': 'no-cache',
                 accept: '*/*',
                 origin: 'http://localhost:1337',
                 'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                 'content-type': 'text/plain;charset=UTF-8',
                 dnt: '1',
                 referer: 'http://localhost:1337/11111111111111111111111',
                 'accept-encoding': 'gzip, deflate, br',
                 'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                 cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
              rawHeaders: 
               [ 'Host',
                 'localhost:1337',
                 'Connection',
                 'keep-alive',
                 'Content-Length',
                 '37',
                 'Pragma',
                 'no-cache',
                 'Cache-Control',
                 'no-cache',
                 'Accept',
                 '*/*',
                 'Origin',
                 'http://localhost:1337',
                 'User-Agent',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                 'Content-type',
                 'text/plain;charset=UTF-8',
                 'DNT',
                 '1',
                 'Referer',
                 'http://localhost:1337/11111111111111111111111',
                 'Accept-Encoding',
                 'gzip, deflate, br',
                 'Accept-Language',
                 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                 'Cookie',
                 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
              trailers: {},
              rawTrailers: [],
              upgrade: false,
              url: '/socket.io/?EIO=3&transport=polling&t=M560_kK&sid=AzhFMsgreZEbsPO3AAAC',
              method: 'POST',
              statusCode: null,
              statusMessage: null,
              client: [Circular],
              _consuming: true,
              _dumped: false,
              _query: 
               { EIO: '3',
                 transport: 'polling',
                 t: 'M560_kK',
                 sid: 'AzhFMsgreZEbsPO3AAAC' },
              res: 
               ServerResponse {
                 domain: null,
                 _events: { finish: [Function: resOnFinish] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 output: [],
                 outputEncodings: [],
                 outputCallbacks: [],
                 outputSize: 0,
                 writable: true,
                 _last: false,
                 upgrading: false,
                 chunkedEncoding: false,
                 shouldKeepAlive: true,
                 useChunkedEncodingByDefault: true,
                 sendDate: true,
                 _removedHeader: {},
                 _contentLength: null,
                 _hasBody: true,
                 _trailer: '',
                 finished: true,
                 _headerSent: true,
                 socket: null,
                 connection: null,
                 _header: 'HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nContent-Length: 2\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: http://localhost:1337\r\nSet-Cookie: io=AzhFMsgreZEbsPO3AAAC; Path=/; HttpOnly\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\n\r\n',
                 _headers: null,
                 _headerNames: {},
                 _onPendingData: [Function: updateOutgoingData],
                 statusMessage: 'OK',
                 statusCode: 200 },
              read: [Function] },
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: { address: '::1', family: 'IPv6', port: 56884 } },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: 
         Socket {
           connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              bytesRead: 5508,
              _externalStream: {},
              fd: 15,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: 
               [ [Function: serverSocketCloseListener],
                 [Function: onServerResponseClose] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           _bytesDispatched: 1950,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _idleTimeout: 120000,
           _idleNext: [Circular],
           _idlePrev: 
            Socket {
              connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 bytesRead: 3383,
                 _externalStream: {},
                 fd: 14,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              _bytesDispatched: 1139,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { connection: [Function: connectionListener],
                    close: [Function: bound ],
                    listening: [Function: bound ],
                    upgrade: [Function],
                    request: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    bytesRead: 0,
                    _externalStream: {},
                    fd: 13,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::1337' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { connection: [Function: connectionListener],
                    close: [Function: bound ],
                    listening: [Function: bound ],
                    upgrade: [Function],
                    request: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    bytesRead: 0,
                    _externalStream: {},
                    fd: 13,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::1337' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _idleStart: 7460,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: BufferList { head: null, tail: null, length: 0 },
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: false,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: 
                        StringDecoder {
                          encoding: 'utf8',
                          fillLast: [Function: utf8FillLast],
                          lastNeed: 0,
                          lastTotal: 0,
                          lastChar: <Buffer 02 00 00 00> },
                       encoding: 'utf8' },
                    readable: false,
                    domain: null,
                    _events: {},
                    _eventsCount: 0,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { host: 'localhost:1337',
                       connection: 'keep-alive',
                       'content-length': '37',
                       pragma: 'no-cache',
                       'cache-control': 'no-cache',
                       accept: '*/*',
                       origin: 'http://localhost:1337',
                       'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                       'content-type': 'text/plain;charset=UTF-8',
                       dnt: '1',
                       referer: 'http://localhost:1337/11111111111111111111111',
                       'accept-encoding': 'gzip, deflate, br',
                       'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                       cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                    rawHeaders: 
                     [ 'Host',
                       'localhost:1337',
                       'Connection',
                       'keep-alive',
                       'Content-Length',
                       '37',
                       'Pragma',
                       'no-cache',
                       'Cache-Control',
                       'no-cache',
                       'Accept',
                       '*/*',
                       'Origin',
                       'http://localhost:1337',
                       'User-Agent',
                       'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                       'Content-type',
                       'text/plain;charset=UTF-8',
                       'DNT',
                       '1',
                       'Referer',
                       'http://localhost:1337/11111111111111111111111',
                       'Accept-Encoding',
                       'gzip, deflate, br',
                       'Accept-Language',
                       'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                       'Cookie',
                       'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/socket.io/?EIO=3&transport=polling&t=M560_kK&sid=AzhFMsgreZEbsPO3AAAC',
                    method: 'POST',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: false,
                    _query: 
                     { EIO: '3',
                       transport: 'polling',
                       t: 'M560_kK',
                       sid: 'AzhFMsgreZEbsPO3AAAC' },
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       upgrading: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: null,
                       _hasBody: true,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nContent-Length: 2\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: http://localhost:1337\r\nSet-Cookie: io=AzhFMsgreZEbsPO3AAAC; Path=/; HttpOnly\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: null,
                       _headerNames: {},
                       _onPendingData: [Function: updateOutgoingData],
                       statusMessage: 'OK',
                       statusCode: 200 },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 56884 } },
           _idleStart: 7459,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: null,
                    ended: true,
                    endEmitted: false,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: true,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: true,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: {},
                 _eventsCount: 0,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { host: 'localhost:1337',
                    connection: 'keep-alive',
                    pragma: 'no-cache',
                    'cache-control': 'no-cache',
                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
                    dnt: '1',
                    referer: 'http://localhost:1337/11111111111111111111111',
                    'accept-encoding': 'gzip, deflate, br',
                    'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                 rawHeaders: 
                  [ 'Host',
                    'localhost:1337',
                    'Connection',
                    'keep-alive',
                    'Pragma',
                    'no-cache',
                    'Cache-Control',
                    'no-cache',
                    'User-Agent',
                    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    'Accept',
                    'image/webp,image/apng,image/*,*/*;q=0.8',
                    'DNT',
                    '1',
                    'Referer',
                    'http://localhost:1337/11111111111111111111111',
                    'Accept-Encoding',
                    'gzip, deflate, br',
                    'Accept-Language',
                    'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    'Cookie',
                    'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/favicon.ico',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: false,
                 _dumped: false },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: 
            ServerResponse {
              domain: null,
              _events: { finish: [Function: resOnFinish] },
              _eventsCount: 1,
              _maxListeners: undefined,
              output: [],
              outputEncodings: [],
              outputCallbacks: [],
              outputSize: 0,
              writable: true,
              _last: false,
              upgrading: false,
              chunkedEncoding: true,
              shouldKeepAlive: true,
              useChunkedEncodingByDefault: true,
              sendDate: true,
              _removedHeader: {},
              _contentLength: null,
              _hasBody: true,
              _trailer: '',
              finished: false,
              _headerSent: false,
              socket: [Circular],
              connection: [Circular],
              _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
              _headers: null,
              _headerNames: {},
              _onPendingData: [Function: updateOutgoingData],
              statusMessage: 'OK',
              statusCode: 200 },
           _peername: { address: '::1', family: 'IPv6', port: 56886 } },
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 15603,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: true,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:09 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
        _headers: null,
        _headerNames: {},
        _onPendingData: [Function: updateOutgoingData],
        statusMessage: 'OK',
        statusCode: 200 },
     _peername: { address: '::1', family: 'IPv6', port: 56917 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:1337',
     connection: 'keep-alive',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
     accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
     dnt: '1',
     referer: 'http://localhost:1337/2222222',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
     cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AUgY9Hk-kBmNSRgmAAAD' },
  rawHeaders: 
   [ 'Host',
     'localhost:1337',
     'Connection',
     'keep-alive',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
     'Accept',
     'image/webp,image/apng,image/*,*/*;q=0.8',
     'DNT',
     '1',
     'Referer',
     'http://localhost:1337/2222222',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
     'Cookie',
     'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AUgY9Hk-kBmNSRgmAAAD' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3891,
        _externalStream: {},
        fd: 19,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: 
         [ { [Function: g] listener: [Function: onend] },
           [Function: socketOnEnd] ],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [ [Function: ondrain], [Function: socketOnDrain] ],
        timeout: [Function],
        error: [Function: socketOnError],
        close: 
         [ [Function: serverSocketCloseListener],
           [Function: onServerResponseClose] ],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: 
         CorkedRequest {
           next: CorkedRequest { next: null, entry: null, finish: [Function] },
           entry: null,
           finish: [Function] } },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 1363,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: 
         { connection: [Function: connectionListener],
           close: [Function: bound ],
           listening: [Function: bound ],
           upgrade: [Function],
           request: [Function] },
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: {},
           fd: 13,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _server: 
      Server {
        domain: null,
        _events: 
         { connection: [Function: connectionListener],
           close: [Function: bound ],
           listening: [Function: bound ],
           upgrade: [Function],
           request: [Function] },
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 3,
        _handle: 
         TCP {
           bytesRead: 0,
           _externalStream: {},
           fd: 13,
           reading: false,
           owner: [Circular],
           onread: null,
           onconnection: [Function: onconnection],
           writeQueueSize: 0 },
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::1337' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: 
         TCP {
           bytesRead: 3383,
           _externalStream: {},
           fd: 14,
           reading: true,
           owner: [Circular],
           onread: [Function: onread],
           onconnection: null,
           writeQueueSize: 0 },
        _parent: null,
        _host: null,
        _readableState: 
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           defaultEncoding: 'utf8',
           ranOut: false,
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        domain: null,
        _events: 
         { end: 
            [ { [Function: g] listener: [Function: onend] },
              [Function: socketOnEnd] ],
           finish: [Function: onSocketFinish],
           _socketEnd: [Function: onSocketEnd],
           drain: [ [Function: ondrain], [Function: socketOnDrain] ],
           timeout: [Function],
           error: [Function: socketOnError],
           close: [ [Function: serverSocketCloseListener] ],
           data: [Function: socketOnData],
           resume: [Function: onSocketResume],
           pause: [Function: onSocketPause] },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: 
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           bufferedRequestCount: 0,
           corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] } },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1139,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: 
         Server {
           domain: null,
           _events: 
            { connection: [Function: connectionListener],
              close: [Function: bound ],
              listening: [Function: bound ],
              upgrade: [Function],
              request: [Function] },
           _eventsCount: 5,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: {},
              fd: 13,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::1337' },
        _server: 
         Server {
           domain: null,
           _events: 
            { connection: [Function: connectionListener],
              close: [Function: bound ],
              listening: [Function: bound ],
              upgrade: [Function],
              request: [Function] },
           _eventsCount: 5,
           _maxListeners: undefined,
           _connections: 3,
           _handle: 
            TCP {
              bytesRead: 0,
              _externalStream: {},
              fd: 13,
              reading: false,
              owner: [Circular],
              onread: null,
              onconnection: [Function: onconnection],
              writeQueueSize: 0 },
           _usingSlaves: false,
           _slaves: [],
           _unref: false,
           allowHalfOpen: true,
           pauseOnConnect: false,
           httpAllowHalfOpen: false,
           timeout: 120000,
           _pendingResponseData: 0,
           _connectionKey: '6::::1337' },
        _idleTimeout: 120000,
        _idleNext: 
         Socket {
           connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              bytesRead: 5508,
              _externalStream: {},
              fd: 15,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: 
               [ [Function: serverSocketCloseListener],
                 [Function: onServerResponseClose] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           _bytesDispatched: 1950,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _idleTimeout: 120000,
           _idleNext: 
            TimersList {
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
              _unrefed: true,
              msecs: 120000 },
           _idlePrev: [Circular],
           _idleStart: 7459,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: null,
                    ended: true,
                    endEmitted: false,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: true,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: true,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: {},
                 _eventsCount: 0,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { host: 'localhost:1337',
                    connection: 'keep-alive',
                    pragma: 'no-cache',
                    'cache-control': 'no-cache',
                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
                    dnt: '1',
                    referer: 'http://localhost:1337/11111111111111111111111',
                    'accept-encoding': 'gzip, deflate, br',
                    'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                 rawHeaders: 
                  [ 'Host',
                    'localhost:1337',
                    'Connection',
                    'keep-alive',
                    'Pragma',
                    'no-cache',
                    'Cache-Control',
                    'no-cache',
                    'User-Agent',
                    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    'Accept',
                    'image/webp,image/apng,image/*,*/*;q=0.8',
                    'DNT',
                    '1',
                    'Referer',
                    'http://localhost:1337/11111111111111111111111',
                    'Accept-Encoding',
                    'gzip, deflate, br',
                    'Accept-Language',
                    'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    'Cookie',
                    'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/favicon.ico',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: false,
                 _dumped: false },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: 
            ServerResponse {
              domain: null,
              _events: { finish: [Function: resOnFinish] },
              _eventsCount: 1,
              _maxListeners: undefined,
              output: [],
              outputEncodings: [],
              outputCallbacks: [],
              outputSize: 0,
              writable: true,
              _last: false,
              upgrading: false,
              chunkedEncoding: true,
              shouldKeepAlive: true,
              useChunkedEncodingByDefault: true,
              sendDate: true,
              _removedHeader: {},
              _contentLength: null,
              _hasBody: true,
              _trailer: '',
              finished: false,
              _headerSent: false,
              socket: [Circular],
              connection: [Circular],
              _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
              _headers: null,
              _headerNames: {},
              _onPendingData: [Function: updateOutgoingData],
              statusMessage: 'OK',
              statusCode: 200 },
           _peername: { address: '::1', family: 'IPv6', port: 56886 } },
        _idlePrev: [Circular],
        _idleStart: 7460,
        parser: 
         HTTPParser {
           '0': [Function: parserOnHeaders],
           '1': [Function: parserOnHeadersComplete],
           '2': [Function: parserOnBody],
           '3': [Function: parserOnMessageComplete],
           '4': [Function: onParserExecute],
           _headers: [],
           _url: '',
           _consumed: true,
           socket: [Circular],
           incoming: 
            IncomingMessage {
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: false,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: 
                  StringDecoder {
                    encoding: 'utf8',
                    fillLast: [Function: utf8FillLast],
                    lastNeed: 0,
                    lastTotal: 0,
                    lastChar: <Buffer 02 00 00 00> },
                 encoding: 'utf8' },
              readable: false,
              domain: null,
              _events: {},
              _eventsCount: 0,
              _maxListeners: undefined,
              socket: [Circular],
              connection: [Circular],
              httpVersionMajor: 1,
              httpVersionMinor: 1,
              httpVersion: '1.1',
              complete: true,
              headers: 
               { host: 'localhost:1337',
                 connection: 'keep-alive',
                 'content-length': '37',
                 pragma: 'no-cache',
                 'cache-control': 'no-cache',
                 accept: '*/*',
                 origin: 'http://localhost:1337',
                 'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                 'content-type': 'text/plain;charset=UTF-8',
                 dnt: '1',
                 referer: 'http://localhost:1337/11111111111111111111111',
                 'accept-encoding': 'gzip, deflate, br',
                 'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                 cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
              rawHeaders: 
               [ 'Host',
                 'localhost:1337',
                 'Connection',
                 'keep-alive',
                 'Content-Length',
                 '37',
                 'Pragma',
                 'no-cache',
                 'Cache-Control',
                 'no-cache',
                 'Accept',
                 '*/*',
                 'Origin',
                 'http://localhost:1337',
                 'User-Agent',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                 'Content-type',
                 'text/plain;charset=UTF-8',
                 'DNT',
                 '1',
                 'Referer',
                 'http://localhost:1337/11111111111111111111111',
                 'Accept-Encoding',
                 'gzip, deflate, br',
                 'Accept-Language',
                 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                 'Cookie',
                 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
              trailers: {},
              rawTrailers: [],
              upgrade: false,
              url: '/socket.io/?EIO=3&transport=polling&t=M560_kK&sid=AzhFMsgreZEbsPO3AAAC',
              method: 'POST',
              statusCode: null,
              statusMessage: null,
              client: [Circular],
              _consuming: true,
              _dumped: false,
              _query: 
               { EIO: '3',
                 transport: 'polling',
                 t: 'M560_kK',
                 sid: 'AzhFMsgreZEbsPO3AAAC' },
              res: 
               ServerResponse {
                 domain: null,
                 _events: { finish: [Function: resOnFinish] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 output: [],
                 outputEncodings: [],
                 outputCallbacks: [],
                 outputSize: 0,
                 writable: true,
                 _last: false,
                 upgrading: false,
                 chunkedEncoding: false,
                 shouldKeepAlive: true,
                 useChunkedEncodingByDefault: true,
                 sendDate: true,
                 _removedHeader: {},
                 _contentLength: null,
                 _hasBody: true,
                 _trailer: '',
                 finished: true,
                 _headerSent: true,
                 socket: null,
                 connection: null,
                 _header: 'HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nContent-Length: 2\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: http://localhost:1337\r\nSet-Cookie: io=AzhFMsgreZEbsPO3AAAC; Path=/; HttpOnly\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\n\r\n',
                 _headers: null,
                 _headerNames: {},
                 _onPendingData: [Function: updateOutgoingData],
                 statusMessage: 'OK',
                 statusCode: 200 },
              read: [Function] },
           outgoing: null,
           maxHeaderPairs: 2000,
           onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: { address: '::1', family: 'IPv6', port: 56884 } },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: 
         Socket {
           connecting: false,
           _hadError: false,
           _handle: 
            TCP {
              bytesRead: 5508,
              _externalStream: {},
              fd: 15,
              reading: true,
              owner: [Circular],
              onread: [Function: onread],
              onconnection: null,
              writeQueueSize: 0 },
           _parent: null,
           _host: null,
           _readableState: 
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              defaultEncoding: 'utf8',
              ranOut: false,
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           domain: null,
           _events: 
            { end: 
               [ { [Function: g] listener: [Function: onend] },
                 [Function: socketOnEnd] ],
              finish: [Function: onSocketFinish],
              _socketEnd: [Function: onSocketEnd],
              drain: [ [Function: ondrain], [Function: socketOnDrain] ],
              timeout: [Function],
              error: [Function: socketOnError],
              close: 
               [ [Function: serverSocketCloseListener],
                 [Function: onServerResponseClose] ],
              data: [Function: socketOnData],
              resume: [Function: onSocketResume],
              pause: [Function: onSocketPause] },
           _eventsCount: 10,
           _maxListeners: undefined,
           _writableState: 
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              bufferedRequestCount: 0,
              corkedRequestsFree: 
               CorkedRequest {
                 next: CorkedRequest { next: null, entry: null, finish: [Function] },
                 entry: null,
                 finish: [Function] } },
           writable: true,
           allowHalfOpen: true,
           destroyed: false,
           _bytesDispatched: 1950,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _server: 
            Server {
              domain: null,
              _events: 
               { connection: [Function: connectionListener],
                 close: [Function: bound ],
                 listening: [Function: bound ],
                 upgrade: [Function],
                 request: [Function] },
              _eventsCount: 5,
              _maxListeners: undefined,
              _connections: 3,
              _handle: 
               TCP {
                 bytesRead: 0,
                 _externalStream: {},
                 fd: 13,
                 reading: false,
                 owner: [Circular],
                 onread: null,
                 onconnection: [Function: onconnection],
                 writeQueueSize: 0 },
              _usingSlaves: false,
              _slaves: [],
              _unref: false,
              allowHalfOpen: true,
              pauseOnConnect: false,
              httpAllowHalfOpen: false,
              timeout: 120000,
              _pendingResponseData: 0,
              _connectionKey: '6::::1337' },
           _idleTimeout: 120000,
           _idleNext: [Circular],
           _idlePrev: 
            Socket {
              connecting: false,
              _hadError: false,
              _handle: 
               TCP {
                 bytesRead: 3383,
                 _externalStream: {},
                 fd: 14,
                 reading: true,
                 owner: [Circular],
                 onread: [Function: onread],
                 onconnection: null,
                 writeQueueSize: 0 },
              _parent: null,
              _host: null,
              _readableState: 
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: false,
                 endEmitted: false,
                 reading: true,
                 sync: false,
                 needReadable: true,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 defaultEncoding: 'utf8',
                 ranOut: false,
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: true,
              domain: null,
              _events: 
               { end: 
                  [ { [Function: g] listener: [Function: onend] },
                    [Function: socketOnEnd] ],
                 finish: [Function: onSocketFinish],
                 _socketEnd: [Function: onSocketEnd],
                 drain: [ [Function: ondrain], [Function: socketOnDrain] ],
                 timeout: [Function],
                 error: [Function: socketOnError],
                 close: [ [Function: serverSocketCloseListener] ],
                 data: [Function: socketOnData],
                 resume: [Function: onSocketResume],
                 pause: [Function: onSocketPause] },
              _eventsCount: 10,
              _maxListeners: undefined,
              _writableState: 
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 needDrain: false,
                 ending: false,
                 ended: false,
                 finished: false,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 0,
                 prefinished: false,
                 errorEmitted: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree: CorkedRequest { next: null, entry: null, finish: [Function] } },
              writable: true,
              allowHalfOpen: true,
              destroyed: false,
              _bytesDispatched: 1139,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: 
               Server {
                 domain: null,
                 _events: 
                  { connection: [Function: connectionListener],
                    close: [Function: bound ],
                    listening: [Function: bound ],
                    upgrade: [Function],
                    request: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    bytesRead: 0,
                    _externalStream: {},
                    fd: 13,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::1337' },
              _server: 
               Server {
                 domain: null,
                 _events: 
                  { connection: [Function: connectionListener],
                    close: [Function: bound ],
                    listening: [Function: bound ],
                    upgrade: [Function],
                    request: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 _connections: 3,
                 _handle: 
                  TCP {
                    bytesRead: 0,
                    _externalStream: {},
                    fd: 13,
                    reading: false,
                    owner: [Circular],
                    onread: null,
                    onconnection: [Function: onconnection],
                    writeQueueSize: 0 },
                 _usingSlaves: false,
                 _slaves: [],
                 _unref: false,
                 allowHalfOpen: true,
                 pauseOnConnect: false,
                 httpAllowHalfOpen: false,
                 timeout: 120000,
                 _pendingResponseData: 0,
                 _connectionKey: '6::::1337' },
              _idleTimeout: 120000,
              _idleNext: [Circular],
              _idlePrev: [Circular],
              _idleStart: 7460,
              parser: 
               HTTPParser {
                 '0': [Function: parserOnHeaders],
                 '1': [Function: parserOnHeadersComplete],
                 '2': [Function: parserOnBody],
                 '3': [Function: parserOnMessageComplete],
                 '4': [Function: onParserExecute],
                 _headers: [],
                 _url: '',
                 _consumed: true,
                 socket: [Circular],
                 incoming: 
                  IncomingMessage {
                    _readableState: 
                     ReadableState {
                       objectMode: false,
                       highWaterMark: 16384,
                       buffer: BufferList { head: null, tail: null, length: 0 },
                       length: 0,
                       pipes: null,
                       pipesCount: 0,
                       flowing: true,
                       ended: true,
                       endEmitted: true,
                       reading: false,
                       sync: false,
                       needReadable: false,
                       emittedReadable: false,
                       readableListening: false,
                       resumeScheduled: false,
                       defaultEncoding: 'utf8',
                       ranOut: false,
                       awaitDrain: 0,
                       readingMore: false,
                       decoder: 
                        StringDecoder {
                          encoding: 'utf8',
                          fillLast: [Function: utf8FillLast],
                          lastNeed: 0,
                          lastTotal: 0,
                          lastChar: <Buffer 02 00 00 00> },
                       encoding: 'utf8' },
                    readable: false,
                    domain: null,
                    _events: {},
                    _eventsCount: 0,
                    _maxListeners: undefined,
                    socket: [Circular],
                    connection: [Circular],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: 
                     { host: 'localhost:1337',
                       connection: 'keep-alive',
                       'content-length': '37',
                       pragma: 'no-cache',
                       'cache-control': 'no-cache',
                       accept: '*/*',
                       origin: 'http://localhost:1337',
                       'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                       'content-type': 'text/plain;charset=UTF-8',
                       dnt: '1',
                       referer: 'http://localhost:1337/11111111111111111111111',
                       'accept-encoding': 'gzip, deflate, br',
                       'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                       cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                    rawHeaders: 
                     [ 'Host',
                       'localhost:1337',
                       'Connection',
                       'keep-alive',
                       'Content-Length',
                       '37',
                       'Pragma',
                       'no-cache',
                       'Cache-Control',
                       'no-cache',
                       'Accept',
                       '*/*',
                       'Origin',
                       'http://localhost:1337',
                       'User-Agent',
                       'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                       'Content-type',
                       'text/plain;charset=UTF-8',
                       'DNT',
                       '1',
                       'Referer',
                       'http://localhost:1337/11111111111111111111111',
                       'Accept-Encoding',
                       'gzip, deflate, br',
                       'Accept-Language',
                       'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                       'Cookie',
                       'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '/socket.io/?EIO=3&transport=polling&t=M560_kK&sid=AzhFMsgreZEbsPO3AAAC',
                    method: 'POST',
                    statusCode: null,
                    statusMessage: null,
                    client: [Circular],
                    _consuming: true,
                    _dumped: false,
                    _query: 
                     { EIO: '3',
                       transport: 'polling',
                       t: 'M560_kK',
                       sid: 'AzhFMsgreZEbsPO3AAAC' },
                    res: 
                     ServerResponse {
                       domain: null,
                       _events: { finish: [Function: resOnFinish] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       output: [],
                       outputEncodings: [],
                       outputCallbacks: [],
                       outputSize: 0,
                       writable: true,
                       _last: false,
                       upgrading: false,
                       chunkedEncoding: false,
                       shouldKeepAlive: true,
                       useChunkedEncodingByDefault: true,
                       sendDate: true,
                       _removedHeader: {},
                       _contentLength: null,
                       _hasBody: true,
                       _trailer: '',
                       finished: true,
                       _headerSent: true,
                       socket: null,
                       connection: null,
                       _header: 'HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nContent-Length: 2\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: http://localhost:1337\r\nSet-Cookie: io=AzhFMsgreZEbsPO3AAAC; Path=/; HttpOnly\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\n\r\n',
                       _headers: null,
                       _headerNames: {},
                       _onPendingData: [Function: updateOutgoingData],
                       statusMessage: 'OK',
                       statusCode: 200 },
                    read: [Function] },
                 outgoing: null,
                 maxHeaderPairs: 2000,
                 onIncoming: [Function: parserOnIncoming] },
              on: [Function: socketOnWrap],
              _paused: false,
              read: [Function],
              _consuming: true,
              _httpMessage: null,
              _peername: { address: '::1', family: 'IPv6', port: 56884 } },
           _idleStart: 7459,
           parser: 
            HTTPParser {
              '0': [Function: parserOnHeaders],
              '1': [Function: parserOnHeadersComplete],
              '2': [Function: parserOnBody],
              '3': [Function: parserOnMessageComplete],
              '4': [Function: onParserExecute],
              _headers: [],
              _url: '',
              _consumed: true,
              socket: [Circular],
              incoming: 
               IncomingMessage {
                 _readableState: 
                  ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: null,
                    ended: true,
                    endEmitted: false,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: true,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: true,
                    decoder: null,
                    encoding: null },
                 readable: true,
                 domain: null,
                 _events: {},
                 _eventsCount: 0,
                 _maxListeners: undefined,
                 socket: [Circular],
                 connection: [Circular],
                 httpVersionMajor: 1,
                 httpVersionMinor: 1,
                 httpVersion: '1.1',
                 complete: true,
                 headers: 
                  { host: 'localhost:1337',
                    connection: 'keep-alive',
                    pragma: 'no-cache',
                    'cache-control': 'no-cache',
                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
                    dnt: '1',
                    referer: 'http://localhost:1337/11111111111111111111111',
                    'accept-encoding': 'gzip, deflate, br',
                    'accept-language': 'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    cookie: 'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' },
                 rawHeaders: 
                  [ 'Host',
                    'localhost:1337',
                    'Connection',
                    'keep-alive',
                    'Pragma',
                    'no-cache',
                    'Cache-Control',
                    'no-cache',
                    'User-Agent',
                    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36',
                    'Accept',
                    'image/webp,image/apng,image/*,*/*;q=0.8',
                    'DNT',
                    '1',
                    'Referer',
                    'http://localhost:1337/11111111111111111111111',
                    'Accept-Encoding',
                    'gzip, deflate, br',
                    'Accept-Language',
                    'en-US,en;q=0.9,ja;q=0.8,zh-CN;q=0.7,zh;q=0.6',
                    'Cookie',
                    'cookie2=yet another test; c_user=yet another test; wp-settings-time-1=1494867566; AJSTAT_ok_times=2; a1102_times=3; Hm_lvt_7044a4c8b65b43663bf884d77f0ecf01=1496222280,1496306376,1496553094; Webstorm-21d033df=674eb09c-0096-4042-b1d9-67e340ba12ee; _ga=GA1.1.994314633.1480655910; io=AzhFMsgreZEbsPO3AAAC' ],
                 trailers: {},
                 rawTrailers: [],
                 upgrade: false,
                 url: '/favicon.ico',
                 method: 'GET',
                 statusCode: null,
                 statusMessage: null,
                 client: [Circular],
                 _consuming: false,
                 _dumped: false },
              outgoing: null,
              maxHeaderPairs: 2000,
              onIncoming: [Function: parserOnIncoming] },
           on: [Function: socketOnWrap],
           _paused: false,
           read: [Function],
           _consuming: true,
           _httpMessage: 
            ServerResponse {
              domain: null,
              _events: { finish: [Function: resOnFinish] },
              _eventsCount: 1,
              _maxListeners: undefined,
              output: [],
              outputEncodings: [],
              outputCallbacks: [],
              outputSize: 0,
              writable: true,
              _last: false,
              upgrading: false,
              chunkedEncoding: true,
              shouldKeepAlive: true,
              useChunkedEncodingByDefault: true,
              sendDate: true,
              _removedHeader: {},
              _contentLength: null,
              _hasBody: true,
              _trailer: '',
              finished: false,
              _headerSent: false,
              socket: [Circular],
              connection: [Circular],
              _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:01 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
              _headers: null,
              _headerNames: {},
              _onPendingData: [Function: updateOutgoingData],
              statusMessage: 'OK',
              statusCode: 200 },
           _peername: { address: '::1', family: 'IPv6', port: 56886 } },
        _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 15603,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: { finish: [Function: resOnFinish] },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: true,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nDate: Tue, 30 Jan 2018 07:42:09 GMT\r\nConnection: keep-alive\r\nTransfer-Encoding: chunked\r\n\r\n',
        _headers: null,
        _headerNames: {},
        _onPendingData: [Function: updateOutgoingData],
        statusMessage: 'OK',
        statusCode: 200 },
     _peername: { address: '::1', family: 'IPv6', port: 56917 } },
  _consuming: false,
  _dumped: false }